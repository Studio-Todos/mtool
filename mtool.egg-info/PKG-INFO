Metadata-Version: 2.4
Name: mtool
Version: 0.1.0
Summary: A modular CLI tool for various file operations
Author: Connor
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0.0
Requires-Dist: Pillow>=9.0.0
Requires-Dist: qrcode[pil]>=7.4.2
Requires-Dist: requests>=2.25.0
Provides-Extra: audio
Requires-Dist: pydub>=0.25.0; extra == "audio"
Provides-Extra: pdf
Requires-Dist: PyPDF2>=3.0.0; extra == "pdf"
Requires-Dist: pdf2image>=1.16.0; extra == "pdf"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# mtool

A modular CLI tool for various file operations including file conversion, compression, and more.

## Installation

### From source

```bash
git clone <repository-url>
cd mtool
pip install -e .
```

### Using pip (when published)

```bash
pip install mtool
```

## Usage

The basic command structure is:

```bash
mtool <category> <toolname> [options]
```

### File Operations

#### File Compression

```bash
# Compress files/directories
mtool file compress input.txt output.zip

# Extract compressed files
mtool file extract input.zip output_directory
```

### Convert Operations

#### File Conversion

```bash
# Convert image formats
mtool convert file image input.jpg output.png

# Convert audio formats
mtool convert file audio input.mp3 output.wav

# Convert video formats
mtool convert file video input.mp4 output.avi
```

### PDF Operations

#### PDF Information

```bash
# Show PDF details (pages, size, metadata)
mtool pdf info show document.pdf
```

#### PDF Split/Merge

```bash
# Extract specific pages
mtool pdf split pages input.pdf output.pdf "1-3,5,7-10"

# Split into individual pages
mtool pdf split all input.pdf output_directory

# Merge multiple PDFs
mtool pdf merge files file1.pdf file2.pdf output.pdf

# Merge all PDFs in a directory
mtool pdf merge directory input_dir output.pdf --sort
```

#### PDF Conversion

```bash
# Convert images to PDF
mtool convert pdf images-to-pdf image1.jpg image2.png output.pdf

# Convert PDF to images
mtool convert pdf pdf-to-images input.pdf output_dir --format png --dpi 200

# Extract text from PDF
mtool convert pdf extract-text input.pdf output.txt
```

#### PDF Compression

```bash
# Compress PDF file
mtool pdf compress basic input.pdf output.pdf --quality 0.8
```

### Web Operations

#### URL Tools

```bash
# Get URL information
mtool web url info https://example.com

# Validate URL format and accessibility
mtool web url validate https://example.com

# Shorten a URL
mtool web url shorten https://example.com --service tinyurl

# Expand a shortened URL
mtool web url expand https://tinyurl.com/abc123

# URL encode/decode text
mtool web url encode "Hello World!"
mtool web url decode "Hello%20World%21"
```

#### Status Checking

```bash
# Check if website is online
mtool web status check example.com

# Check if port is open
mtool web status port example.com 80

# Ping a host
mtool web status ping example.com

# Monitor website status over time
mtool web status monitor example.com --interval 30 --count 10

# Check SSL certificate
mtool web status ssl https://example.com
```

#### Downloads

```bash
# Download a file
mtool web download file https://example.com/file.zip

# Download with progress
mtool web download file https://example.com/file.zip --progress

# Download multiple files
mtool web download batch url1 url2 url3 output_dir

# Download image with validation
mtool web download image https://example.com/image.jpg

# Check if file can be downloaded
mtool web download check https://example.com/file.zip

# Resume interrupted download
mtool web download resume https://example.com/file.zip output.zip
```

### Text Processing

#### Text Analysis

```bash
# Count lines, words, characters, bytes
mtool text process count file.txt

# Show text statistics and word frequency
mtool text process stats file.txt --top 10
```

#### Text Search and Replace

```bash
# Search for text patterns
mtool text process search "pattern" file.txt --case-sensitive --line-numbers

# Search with regex
mtool text process search "regex.*pattern" file.txt --regex

# Find and replace text
mtool text process replace "old" "new" file.txt --backup --dry-run

# Replace with regex
mtool text process replace "old.*" "new" file.txt --regex
```

#### Text Manipulation

```bash
# Sort lines alphabetically
mtool text process sort file.txt --reverse --numeric

# Remove duplicate lines
mtool text process dedupe file.txt --case-insensitive --count
```

### Data Conversion

#### CSV Operations

```bash
# Show CSV file information
mtool convert data csv-info data.csv

# Convert CSV to JSON
mtool convert data csv-to-json data.csv output.json --pretty --array

# Convert JSON to CSV
mtool convert data json-to-csv data.json output.csv --flatten

# Merge multiple CSV files
mtool convert data merge-csv file1.csv file2.csv output.csv
```

#### JSON Operations

```bash
# Format JSON with proper indentation
mtool convert data format-json input.json output.json --indent 4 --sort-keys

# Validate JSON format
mtool convert data validate-json data.json
```

## Available Tools

### File Category

- **compress**: Compress files and directories
- **extract**: Extract compressed archives

### PDF Category

- **info**: Get information about PDF files (pages, size, metadata)
- **split**: Split PDFs by pages or extract specific pages
- **merge**: Combine multiple PDFs into one
- **compress**: Reduce PDF file size

### Utility Category

- **qrcode**: Generate QR codes from text or URLs

### Web Category

- **url**: URL manipulation and information tools
  - info: Get detailed URL information
  - validate: Check URL format and accessibility
  - shorten: Shorten URLs using services
  - expand: Expand shortened URLs
  - encode/decode: URL encode/decode text
- **status**: Website and service status checking
  - check: Check if website is online
  - port: Check if port is open
  - ping: Ping a host
  - monitor: Monitor website status over time
  - ssl: Check SSL certificate information
- **download**: Web download utilities
  - file: Download files with progress tracking
  - batch: Download multiple files
  - image: Download images with validation
  - check: Check download availability
  - resume: Resume interrupted downloads

### Text Category

- **process**: Text processing and manipulation
  - count: Count lines, words, characters, bytes
  - search: Search for text patterns with regex support
  - replace: Find and replace text with backup options
  - sort: Sort lines alphabetically or numerically
  - dedupe: Remove duplicate lines
  - stats: Show text statistics and word frequency

### Convert Category

- **file**: Convert files between different formats
  - image: JPG, PNG, GIF, BMP, TIFF, WebP
  - audio: MP3, WAV, FLAC, OGG, AAC
  - video: MP4, AVI, MOV, MKV, WebM
- **pdf**: Convert between PDF and other formats
  - images-to-pdf: Combine images into PDF
  - pdf-to-images: Convert PDF pages to images
  - extract-text: Extract text from PDF
- **data**: Data format conversion
  - csv-to-json: Convert CSV to JSON format
  - json-to-csv: Convert JSON to CSV format
  - format-json: Format JSON with indentation
  - validate-json: Validate JSON format
  - csv-info: Show CSV file information
  - merge-csv: Merge multiple CSV files

## Architecture

mtool is designed to be highly modular and expandable:

- **Core CLI**: Handles command parsing and routing
- **Tool Categories**: Grouped by functionality (file, network, etc.)
- **Tool Modules**: Individual tools within each category
- **Plugin System**: Easy to add new tools and categories

## Development

To add new tools:

1. Create a new tool module in the appropriate category directory
2. Implement the tool interface
3. Register the tool in the category's `__init__.py`

## License

MIT License
